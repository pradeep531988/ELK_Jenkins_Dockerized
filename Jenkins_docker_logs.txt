28781@BLRUNNFWN28781 MINGW64 /d/GitHubClone/kibana-plugin-howto-infra (master)
$ docker-compose build jenkins
Building jenkins
Step 1/13 : FROM jenkins
 ---> 00b7c903b9e4
Step 2/13 : USER root
 ---> Running in 7c1f143911d8
Removing intermediate container 7c1f143911d8
 ---> 6909d1a1d424
Step 3/13 : WORKDIR /var/jenkins_home/
Removing intermediate container 3c7707c30b0f
 ---> 41cca4cb8e3a
Step 4/13 : RUN touch .profile
 ---> Running in f40d54044182
Removing intermediate container f40d54044182
 ---> c05620f989e7
Step 5/13 : RUN wget -O - https://raw.githubusercontent.com/creationix/nvm/v0.11.1/install.sh | bash
 ---> Running in 5546f9179523
--2018-06-06 07:53:21--  https://raw.githubusercontent.com/creationix/nvm/v0.11.1/install.sh
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.8.133, fd00:0:b:33::9765:885
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.8.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3329 (3.3K) [text/plain]
Saving to: ‘STDOUT’

     0K ...     => Downloading nvm from git to '/root/.nvm'
                                              100%  678K=0.005s

2018-06-06 07:53:23 (678 KB/s) - written to stdout [3329/3329]

=> Cloning into '/root/.nvm'...
Note: checking out 'v0.11.1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 7a423b7... v0.11.1
Deleted branch master (was 9854928).

=> Appending source string to /root/.profile
=> Close and reopen your terminal to start using nvm
Removing intermediate container 5546f9179523
 ---> 998093a0b73d
Step 6/13 : RUN rm -f /var/jenkins_home/.ssh/known_hosts
 ---> Running in 45e6ad3b27c6
Removing intermediate container 45e6ad3b27c6
 ---> 17f91c3a08ac
Step 7/13 : RUN chmod -R 777 /var/jenkins_home
 ---> Running in 01d885a25230
Removing intermediate container 01d885a25230
 ---> 2b3df59da7f5
Step 8/13 : COPY /data/plugins.txt /usr/share/jenkins/plugins.txt
 ---> f44389a1afab
Step 9/13 : RUN tail -100000 /usr/local/bin/plugins.sh
 ---> Running in 98b6626de2c5
#! /bin/bash

# Parse a support-core plugin -style txt file as specification for jenkins plugins to be installed
# in the reference directory, so user can define a derived Docker image with just :
#
# FROM jenkins
# COPY plugins.txt /plugins.txt
# RUN /usr/local/bin/plugins.sh /plugins.txt
#
# Note: Plugins already installed are skipped
#

set -e

echo "WARN: plugins.sh is deprecated, please switch to install-plugins.sh"

if [ -z "$1" ]
then
    echo "
USAGE:
  Parse a support-core plugin -style txt file as specification for jenkins plugins to be installed
  in the reference directory, so user can define a derived Docker image with just :

  FROM jenkins
  COPY plugins.txt /plugins.txt
  RUN /usr/local/bin/plugins.sh /plugins.txt

  Note: Plugins already installed are skipped

"
    exit 1
else
    JENKINS_INPUT_JOB_LIST=$1
    if [ ! -f "$JENKINS_INPUT_JOB_LIST" ]
    then
        echo "ERROR File not found: $JENKINS_INPUT_JOB_LIST"
        exit 1
    fi
fi

# the war includes a # of plugins, to make the build efficient filter out
# the plugins so we dont install 2x - there about 17!
if [ -d "$JENKINS_HOME" ]
then
    TEMP_ALREADY_INSTALLED=$JENKINS_HOME/preinstalled.plugins.$$.txt
else
    echo "ERROR $JENKINS_HOME not found"
    exit 1
fi

JENKINS_PLUGINS_DIR=/var/jenkins_home/plugins
if [ -d "$JENKINS_PLUGINS_DIR" ]
then
    echo "Analyzing: $JENKINS_PLUGINS_DIR"
    for i in "$JENKINS_PLUGINS_DIR"/*/; do
        JENKINS_PLUGIN=$(basename "$i")
        JENKINS_PLUGIN_VER=$(grep -E -i Plugin-Version "$i/META-INF/MANIFEST.MF"|cut -d: -f2|sed 's/ //')
        echo "$JENKINS_PLUGIN:$JENKINS_PLUGIN_VER"
    done >"$TEMP_ALREADY_INSTALLED"
else
    JENKINS_WAR=/usr/share/jenkins/jenkins.war
    if [ -f "$JENKINS_WAR" ]
    then
        echo "Analyzing war: $JENKINS_WAR"
        TEMP_PLUGIN_DIR=/tmp/plugintemp.$$
        while read -r i <&3; do
            rm -fr "$TEMP_PLUGIN_DIR"
            mkdir -p "$TEMP_PLUGIN_DIR"
            PLUGIN=$(basename "$i"|cut -f1 -d'.')
            (cd "$TEMP_PLUGIN_DIR" || exit; jar xf "$JENKINS_WAR" "$i"; jar xvf "$TEMP_PLUGIN_DIR/$i" META-INF/MANIFEST.MF >/dev/null 2>&1)
            VER=$(grep -E -i Plugin-Version "$TEMP_PLUGIN_DIR/META-INF/MANIFEST.MF"|cut -d: -f2|sed 's/ //')
            echo "$PLUGIN:$VER"
        done 3< <(jar tf "$JENKINS_WAR" | grep -E '[^detached-]plugins.*\..pi' | sort) > "$TEMP_ALREADY_INSTALLED"
        rm -fr "$TEMP_PLUGIN_DIR"
    else
        rm -f "$TEMP_ALREADY_INSTALLED"
        echo "ERROR file not found: $JENKINS_WAR"
        exit 1
    fi
fi

REF=/usr/share/jenkins/ref/plugins
mkdir -p $REF
COUNT_PLUGINS_INSTALLED=0
while read -r spec || [ -n "$spec" ]; do

    plugin=()
    IFS=' ' read -r -a plugin <<< "${spec//:/ }"
    [[ ${plugin[0]} =~ ^# ]] && continue
    [[ ${plugin[0]} =~ ^[[:space:]]*$ ]] && continue
    [[ -z ${plugin[1]} ]] && plugin[1]="latest"

    if [ -z "$JENKINS_UC_DOWNLOAD" ]; then
      JENKINS_UC_DOWNLOAD=$JENKINS_UC/download
    fi

    if ! grep -q "${plugin[0]}:${plugin[1]}" "$TEMP_ALREADY_INSTALLED"
    then
        echo "Downloading ${plugin[0]}:${plugin[1]}"
        curl --retry 3 --retry-delay 5 -sSL -f "${JENKINS_UC_DOWNLOAD}/plugins/${plugin[0]}/${plugin[1]}/${plugin[0]}.hpi" -o "$REF/${plugin[0]}.jpi"
        unzip -qqt "$REF/${plugin[0]}.jpi"
        (( COUNT_PLUGINS_INSTALLED += 1 ))
    else
        echo "  ... skipping already installed:  ${plugin[0]}:${plugin[1]}"
    fi
done  < "$JENKINS_INPUT_JOB_LIST"

echo "---------------------------------------------------"
if (( "$COUNT_PLUGINS_INSTALLED" > 0 ))
then
    echo "INFO: Successfully installed $COUNT_PLUGINS_INSTALLED plugins."

    if [ -d $JENKINS_PLUGINS_DIR ]
    then
        echo "INFO: Please restart the container for changes to take effect!"
    fi
else
    echo "INFO: No changes, all plugins previously installed."

fi
echo "---------------------------------------------------"

#cleanup
rm "$TEMP_ALREADY_INSTALLED"
exit 0
Removing intermediate container 98b6626de2c5
 ---> 82cbbf275295
Step 10/13 : RUN apt-get update
 ---> Running in d61df6e169bb
Get:1 http://security.debian.org/debian-security stretch/updates InRelease [94.3 kB]
Ign:2 http://deb.debian.org/debian stretch InRelease
Get:3 http://deb.debian.org/debian stretch-updates InRelease [91.0 kB]
Get:4 http://security.debian.org/debian-security stretch/updates/main amd64 Packages [442 kB]
Get:5 http://deb.debian.org/debian stretch Release [118 kB]
Get:6 http://deb.debian.org/debian stretch-updates/main amd64 Packages [12.1 kB]
Get:7 http://deb.debian.org/debian stretch Release.gpg [2434 B]
Get:8 http://deb.debian.org/debian stretch/main amd64 Packages [9530 kB]
Fetched 10.3 MB in 1min 55s (89.3 kB/s)
Reading package lists...
Removing intermediate container d61df6e169bb
 ---> 8837b4dcede4
Step 11/13 : RUN apt-get install -y dos2unix
 ---> Running in a8e5cdbba1c7
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  dos2unix
0 upgraded, 1 newly installed, 0 to remove and 9 not upgraded.
Need to get 368 kB of archives.
After this operation, 1283 kB of additional disk space will be used.
Get:1 http://deb.debian.org/debian stretch/main amd64 dos2unix amd64 7.3.4-3 [368 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 368 kB in 5s (62.8 kB/s)
Selecting previously unselected package dos2unix.
(Reading database ... 21470 files and directories currently installed.)
Preparing to unpack .../dos2unix_7.3.4-3_amd64.deb ...
Unpacking dos2unix (7.3.4-3) ...
Setting up dos2unix (7.3.4-3) ...
Removing intermediate container a8e5cdbba1c7
 ---> 77ea7ff8398c
Step 12/13 : RUN dos2unix /usr/share/jenkins/plugins.txt && apt-get --purge remove -y dos2unix && rm -rf /var/lib/apt/lists/*
 ---> Running in aaadba6a9b10
dos2unix: converting file /usr/share/jenkins/plugins.txt to Unix format...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  dos2unix*
0 upgraded, 0 newly installed, 1 to remove and 9 not upgraded.
After this operation, 1283 kB disk space will be freed.
(Reading database ... 21572 files and directories currently installed.)
Removing dos2unix (7.3.4-3) ...
Removing intermediate container aaadba6a9b10
 ---> d56270f9a854
Step 13/13 : RUN xargs /usr/local/bin/plugins.sh  /usr/share/jenkins/plugins.txt
 ---> Running in a51fd208222f
WARN: plugins.sh is deprecated, please switch to install-plugins.sh
Analyzing war: /usr/share/jenkins/jenkins.war
Downloading ant:1.3
Downloading antisamy-markup-formatter:1.3
Downloading artifactdeployer:0.33
Downloading credentials:1.28
Downloading cvs:2.12
Downloading external-monitor-job:1.4
Downloading git-client:1.19.6
Downloading git:2.4.4
Downloading icon-shim:2.0.3
Downloading javadoc:1.3
Downloading junit:1.13
Downloading ldap:1.12
Downloading mailer:1.17
Downloading mapdb-api:1.0.6.0
Downloading matrix-auth:1.3.2
Downloading matrix-project:1.6
Downloading maven-plugin:2.13
Downloading nodejs:0.2.1
Downloading pam-auth:1.2
Downloading publish-over-ssh:1.14
Downloading scm-api:1.2
Downloading script-security:1.19
Downloading ssh-credentials:1.12
Downloading ssh-slaves:1.11
Downloading subversion:2.5.7
Downloading translation:1.14
Downloading windows-slaves:1.1
---------------------------------------------------
INFO: Successfully installed 27 plugins.
---------------------------------------------------
Removing intermediate container a51fd208222f
 ---> fdb4b5f41362
Successfully built fdb4b5f41362
Successfully tagged kibanapluginhowtoinfra_jenkins:latest
